-- (Job) Application table 
create table "public"."application" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "job_listing_id" uuid,
    "user_id" uuid not null,
    "applied_on" timestamp with time zone not null
);

-- RLS
alter table "public"."application" enable row level security;

create policy "Enable delete for users based on user_id"
on "public"."application"
as permissive
for delete
to public
using ((( SELECT auth.uid() AS uid) = user_id));

create policy "Enable insert for users based on user_id"
on "public"."application"
as permissive
for insert
to public
with check ((( SELECT auth.uid() AS uid) = user_id));

create policy "Enable read access for users based on user_id"
on "public"."application"
as permissive
for select
to public
using ((( SELECT auth.uid() AS uid) = user_id));

create policy "Enable update for users based on email"
on "public"."application"
as permissive
for update
to public
using ((( SELECT auth.uid() AS uid) = user_id))
with check ((( SELECT auth.uid() AS uid) = user_id));

-- Unicity -- one app per user per job
create unique index "application_user_id_job_listing_id_key" on "public"."application" using btree (user_id, job_listing_id);

-- PK
CREATE UNIQUE INDEX application_pkey ON public.application USING btree (id);
alter table "public"."application" add constraint "application_pkey" PRIMARY KEY using index "application_pkey";

-- FKs
alter table "public"."application" add constraint "application_job_listing_id_fkey" FOREIGN KEY (job_listing_id) REFERENCES job_listing(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."application" validate constraint "application_job_listing_id_fkey";

alter table "public"."application" add constraint "application_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."application" validate constraint "application_user_id_fkey";

-- role based acces 
grant all on table "public"."application" to "anon";
grant all on table "public"."application" to "authenticated";
grant all on table "public"."application" to "service_role";
