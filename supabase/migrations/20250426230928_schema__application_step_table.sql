-- enum
create type "public"."application_step_enum" as enum ('phone_screener', 'interview', 'onsite', 'final_round');

-- appplication step table
create table "public"."application_step" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "step_type" application_step_enum not null,
    "notes" text,
    "application_id" bigint not null
);

-- RLS
alter table "public"."application_step" enable row level security;
-- allow SELECT for owner
CREATE POLICY "Select own steps"
ON public."application_step"
FOR SELECT
USING (
  (
    SELECT "application".user_id
    FROM public."application"
    WHERE "application".id = "application_step".application_id
  ) = auth.uid()
);

-- allow INSERT for owner
CREATE POLICY "Insert own steps"
ON public."application_step"
FOR INSERT
WITH CHECK (
  (
    SELECT "application".user_id
    FROM public."application"
    WHERE "application".id = "application_step".application_id
  ) = auth.uid()
);

-- allow UPDATE for owner
CREATE POLICY "Update own steps"
ON public."application_step"
FOR UPDATE
USING (
  (
    SELECT "application".user_id
    FROM public."application"
    WHERE "application".id = "application_step".application_id
  ) = auth.uid()
);

-- allow DELETE for owner
CREATE POLICY "Delete own steps"
ON public."application_step"
FOR DELETE
USING (
  (
    SELECT "application".user_id
    FROM public."application"
    WHERE "application".id = "application_step".application_id
  ) = auth.uid()
);

-- PK
CREATE UNIQUE INDEX application_step_pkey ON public.application_step USING btree (id);
alter table "public"."application_step" add constraint "application_step_pkey" PRIMARY KEY using index "application_step_pkey";

-- FKs
alter table "public"."application_step" add constraint "application_step_application_id_fkey" FOREIGN KEY (application_id) REFERENCES application(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table "public"."application_step" validate constraint "application_step_application_id_fkey";

-- role based access
grant all on table "public"."application_step" to "anon";
grant all on table "public"."application_step" to "authenticated";
grant all on table "public"."application_step" to "service_role";